
module myapp1 1.0;

require {
	type wtmp_t;
	type device_t;
	type staff_systemd_t;
	type utempter_exec_t;
	type sound_device_t;
	type udev_runtime_t;
	type initrc_tmp_t;
	type fixed_disk_device_t;
	type urandom_device_t;
	type user_home_dir_t;
	type var_t;
	type sysadm_screen_t;
	type user_home_t;
	type mdadm_t;
	type kmod_t;
	type sysadm_t;
	type debugfs_t;
	class chr_file { getattr open read };
	class file { append create execute execute_no_trans getattr lock map open read rename unlink write };
	class blk_file { open read };
	class dir { add_name getattr open read remove_name search write };
	class lnk_file read;
	class capability dac_read_search;
}

#============= kmod_t ==============
allow kmod_t initrc_tmp_t:dir { add_name getattr open read remove_name search write };
allow kmod_t initrc_tmp_t:file { create getattr map open read rename unlink write };
allow kmod_t initrc_tmp_t:lnk_file read;

#============= mdadm_t ==============
allow mdadm_t debugfs_t:dir search;
allow mdadm_t device_t:blk_file { open read };
allow mdadm_t udev_runtime_t:dir getattr;

#!!!! This avc can be allowed using the boolean 'global_ssp'
allow mdadm_t urandom_device_t:chr_file { open read };
allow mdadm_t var_t:file append;

#============= staff_systemd_t ==============
allow staff_systemd_t sound_device_t:chr_file getattr;

#============= sysadm_screen_t ==============
allow sysadm_screen_t self:capability dac_read_search;
allow sysadm_screen_t user_home_t:dir search;
allow sysadm_screen_t utempter_exec_t:file { map open read };
allow sysadm_screen_t wtmp_t:file { lock open write };

#============= sysadm_t ==============
allow sysadm_t fixed_disk_device_t:blk_file { open read };
allow sysadm_t user_home_dir_t:file { execute execute_no_trans };
