
module sudotev2 1.0;

require {
	type tmp_t;
	type user_home_dir_t;
	type syslog_conf_t;
#	type sysadm_crontab_t;
	type semanage_read_lock_t;
#	type cron_spool_t;
	type bacula_t;
	type sysadm_t;
	type user_home_t;
	type sshd_t;
	type locale_t;
	type home_root_t;
	type var_lib_t;
	type var_spool_t;
	type sysadm_sudo_t;
	class file { create execute execute_no_trans getattr ioctl map open read relabelfrom relabelto rename setattr unlink write };
	class dir { add_name getattr remove_name rmdir search write };
	class key link;
}

#============= bacula_t ==============

#!!!! This avc is allowed in the current policy
allow bacula_t locale_t:file map;

#!!!! This avc is allowed in the current policy
allow bacula_t var_lib_t:file { create write };

#============= sshd_t ==============

#!!!! This avc is allowed in the current policy
allow sshd_t sysadm_t:key link;

#!!!! This avc is allowed in the current policy
allow sshd_t user_home_dir_t:file getattr;

#============= sysadm_crontab_t ==============
#allow sysadm_crontab_t cron_spool_t:file { getattr open read };
#allow sysadm_crontab_t home_root_t:file { open read };

#============= sysadm_sudo_t ==============
#allow sysadm_sudo_t cron_spool_t:dir { getattr search };
#allow sysadm_sudo_t cron_spool_t:file { getattr open read };

#!!!! This avc is allowed in the current policy
allow sysadm_sudo_t semanage_read_lock_t:file getattr;
allow sysadm_sudo_t tmp_t:file { create unlink };

#!!!! This avc is a constraint violation.  You would need to modify the attributes of either the source or target types to allow this access.
#Constraint rule: 
#	constrain file { ioctl read write create getattr setattr lock relabelfrom relabelto append map unlink link rename execute quotaon mounton audit_access open execmod watch watch_mount watch_sb watch_with_perm watch_reads execute_no_trans entrypoint } ((u1 == u2 -Fail-)  or (u1 == system_u -Fail-)  or (u1 == unconfined_u -Fail-)  or (u1 == sysadm_u -Fail-)  or (u2 == system_u -Fail-)  or (t1 != ubac_constrained_type -Fail-)  or (t2 != ubac_constrained_type -Fail-)  or (t1 == ubacfile -Fail-) ); Constraint DENIED

#	Possible cause is the source user (root) and target user (unconfined_u) are different.
#	Possible cause is the source level (s0-s0:c0.c1023) and target level (s0) are different.
allow sysadm_sudo_t user_home_t:file { getattr map open read };
allow sysadm_sudo_t var_spool_t:dir search;

#!!!! This avc is a constraint violation.  You would need to modify the attributes of either the source or target types to allow this access.
#Constraint rule: 
#	constrain file { ioctl read write create getattr setattr lock relabelfrom relabelto append map unlink link rename execute quotaon mounton audit_access open execmod watch watch_mount watch_sb watch_with_perm watch_reads execute_no_trans entrypoint } ((u1 == u2 -Fail-)  or (u1 == system_u -Fail-)  or (u1 == unconfined_u -Fail-)  or (u1 == sysadm_u -Fail-)  or (u2 == system_u -Fail-)  or (t1 != ubac_constrained_type -Fail-)  or (t2 != ubac_constrained_type -Fail-)  or (t1 == ubacfile -Fail-) ); Constraint DENIED

